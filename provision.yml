- name: Configuring environment
  hosts: localhost
  connection: local
  vars_files:
      - group_vars/nomad/vars
      - group_vars/nomad/secret_vars
  
  vars:
    count: '{{ cluster_size - 1 }}' # UDF
       
  tasks:
  - name: creating nomad clients
    linode.cloud.instance:
      label: '{{ instance_prefix }}-client-{{ item | int + 1 }}-{{ uuid }}'
      api_token: '{{ api_token }}'
      type: '{{ type }}'
      region: '{{ region }}'
      image: '{{ image }}'
      root_pass: '{{ root_pass }}'
      authorized_keys: '{{ ssh_keys }}'
      private_ip: true
      stackscript_id: '1226547'
      ua_prefix: 'markeplace-nomad-client-occ'      
      tags: 'consul-server'
      state: present
    with_sequence: count='{{ count }}'

  - name: get info about the client instances
    linode.cloud.instance_info:
      api_token: '{{ api_token }}'
      label: '{{ instance_prefix }}-client-{{ item | int }}-{{ uuid }}'
    register: client_info
    with_sequence: count='{{ cluster_size }}'

  - name: update group_vars
    blockinfile:
      path: ./group_vars/nomad/vars
      marker: "# {mark} INSTANCE VARS"
      block: |
        #jinja2: trim_blocks:False
        nomad_data:
          client:
            {%- for count in range(cluster_size) %}
            - nomad-client-{{ count + 1 }}:
              instance:
                hostname: {{ client_info.results[count].instance.label | replace('_', '-') }}
                ip_pub1: {{ client_info.results[count].instance.ipv4[0] }}
                ip_priv1: {{ client_info.results[count].instance.ipv4[1] }}
            {%- endfor %}

  - name: test connectivity
    ping: 
    with_items: "{{ item.instance.ipv4[0] }}"
    loop: 
    - "{{ client_info.results }}"

  - name: update inventory
    blockinfile:
      path: ./hosts
      marker: "# {mark} NOMAD LINODES"
      block: |
        #jinja2: trim_blocks:False
        [nomad_cluster]
        [nomad_client]
        localhost ansible_connection=local user=root
        {%- for count in range(cluster_size -1 ) %}
        {{ client_info.results[count + 1].instance.ipv4[0] }}
        {%- endfor %}

  - name: wait for port 22 to become open
    wait_for:
      port: 22
      host: '{{ item.instance.ipv4[0] }}'
      search_regex: OpenSSH
      delay: 10
    connection: local
    with_items: "{{ client_info.results }}"